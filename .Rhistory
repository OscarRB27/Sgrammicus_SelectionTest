heatmap(Sgram_fst,col=rev(heat.colors(150)),symm=F)
(Sgram_fst<-pairwise.neifst(Sgram_fstat))
heatmap(Sgram_fst,col=rev(heat.colors(70)),symm=F)
heatmap(Sgram_fst,col=rev(heat.colors(50)),symm=F)
heatmap(Sgram_fst,col=rev(heat.colors(30)),symm=F)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=6)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=8)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=10)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=8,n.pca=10)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=40)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=30)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca20)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=20)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
compoplot(Sgram_dpac)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=18)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
Sgram_dpac <-dapc(Sgram,n.da=2,n.pca=8)
scatter (Sgram_dpac, col =Colores.Sgram,cex=2,bg="white", solid=0.8,scree.da=FALSE,scree.pca=FALSE,lwd = 2, lty = 1, segcol = "black",legend = FALSE, posi.leg = "topright",cstar=1,cellipse=1,clabel =0.75,grid =TRUE)
library(ggplot2)
library(corrplot)
corrplot(Sgram_fst,is.corr=FALSE,method="square",type="lower",col=rev(heat.colors(100)),
diag=FALSE)
corrplot(Sgram_fst,is.corr=T,method="square",type="lower",col=rev(heat.colors(50)),
diag=FALSE)
corrplot(Sgram_fst,is.corr=F,method="square",type="lower",col=rev(heat.colors(50)),
diag=FALSE)
corrplot(Sgram_fst,is.corr=F,method="square",type="lower",col=rev(heat.colors(30)),
diag=FALSE)
corrplot(Sgram_fst,is.corr=F,method="square",type="lower",col=rev(heat.colors(100)),
diag=FALSE)
corrplot(Sgram_fst,is.corr=F,method="square",type="lower",col=rev(heat.colors(50)),
diag=FALSE)
heatmap(Sgram_fst,col=rev(heat.colors(30)),symm=F)
Loci.scale<-scaleGen(Sgram,NA.method="mean")
C.datos.pca <- dudi.pca(Loci.scale,nf=2,scannf=FALSE,scale=FALSE,center=FALSE)
#Extraemos las coordenadas
C_datos.coords<-C.datos.pca$li
C_datos.coords$loc <- Labels.C_datos$loc
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
C_datos.coords$loc <- Ind_Pops$loc
#
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
C_datos.coords$loc <- Ind_Pops$V2
#
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc,cex=2))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc,cex=2))+theme_light()+ scale_shape_manual(values=c(1:14))
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
C.datos.pca <- dudi.pca(Loci.scale,nf=2,scannf=FALSE,scale=T,center=T)
#Extraemos las coordenadas
C_datos.coords<-C.datos.pca$li
C_datos.coords$loc <- Ind_Pops$V2
#
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
C.datos.pca <- dudi.pca(Loci.scale,nf=4,scannf=FALSE,scale=T,center=T)
#Extraemos las coordenadas
C_datos.coords<-C.datos.pca$li
C_datos.coords$loc <- Ind_Pops$V2
#
ggplot(C_datos.coords,aes(x=Axis1,y=Axis2,colour=loc))+geom_point(aes(shape=loc))+theme_light()+ scale_shape_manual(values=c(1:14))
###DAPC
Sgram_dapc2<- dapc(Sgram)
###DAPC
Sgram_dapc2<- dapc(Sgram)
scatter(Sgram_dapc2)
kgrp <- find.clusters(Sgram)
kgrp <- find.clusters(Sgram)
kgrp <- find.clusters(Sgram)
kgrp <- find.clusters(Sgram)
C.datos.dapc <- dapc(Sgram,grp=kgrp$grp)
scatter (C.datos.dapc)
assignplot(C.datos.dapc)
compoplot(C.datos.dapc,col=rainbow(14))
assignplot(C.datos.dapc)
scatter (C.datos.dapc)
assignplot(C.datos.dapc)
compoplot(C.datos.dapc,col=rainbow(14))
Sgram_dapc2<- dapc(Sgram)
scatter (C.datos.dapc)
#Base de datos vcf
Sgram.vcf<-read.vcfR("Sg_Pols_SNPs.vcf")
#Base de datos vcf
Sgram.vcf<-read.vcfR("Sg_Pols2M.vcf")
pwd
ped()
pwd()
install.packages("pcadapt")
setwd("~/Documents/Doctorado/Cuarto_semestre/EvolMolAdap/Sgrammicus_SelectionTest")
library(ggplot2)
library(nortest)
library(dplyr)
#Enviromental variables databases
Sg.env<-read.table("Data/Env_Data/Env_Data.txt",header=T)
#Transform to factor some variables
Sg.env$ID<-factor(Sg.env$ID)
Sg.env$Site<-factor(Sg.env$Site)
Sg.env$Polygon<-factor(Sg.env$Polygon)
Sg.env$Site_ID<-factor(Sg.env$Site_ID)
#Explore data
str(Sg.env)
summary(Sg.env)
#Polygon bases
P6<-read.table("Data/Env_Data/P6.txt",header=T)
P5<-read.table("Data/Env_Data/P5.txt",header=T)
#Sites base by polygon
P6For<-read.table("Data/Env_Data/P6For.txt",header=T)
P6Agr<-read.table("Data/Env_Data/P6Agr.txt",header=T)
P5For<-read.table("Data/Env_Data/P5For.txt",header=T)
P5Agr<-read.table("Data/Env_Data/P5Agr.txt",header=T)
#Landscape cover database
Sg.cov<-as.data.frame(read.table("Data/Env_Data/Cov_Data.txt",header=T))
#Transform to factor some variables
Sg.cov$Sites<-factor(Sg.cov$Sites)
Sg.cov$Coverage<-factor(Sg.cov$Coverage,labels=c("Agriculture","Bare soil","Forest","Roads"))
#Explore data
str(Sg.cov)
summary(Sg.env)
(Sg.lancov<-ggplot(data=Sg.cov, #Database
aes(x=Sites,y=Prop_Cov,fill=Coverage))+ #Axis definition
geom_bar(stat="identity",color="black")+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Fraction of land cover")+ #y-axis legend
scale_fill_manual(values=c("aquamarine3","darkgoldenrod","darkslategray","azure4"))+ #Colors definition
theme_bw()+ #Canvas definition
labs(fill="Land cover")+ #Rename legend
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme(axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.lancov.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#Extract samples of P6For site within Polygon 6
P6For<-filter(Sg.env,Site_ID == "P6For")
#Extract samples of P6Agr site within Polygon 6
P6Agr<-filter(Sg.env,Site_ID == "P6Agr")
#Extract samples of P5For site within Polygon 5
P5For<-filter(Sg.env,Site_ID == "P5For")
#Extract samples of P5Agr site within Polygon 5
P5Agr<-filter(Sg.env,Site_ID == "P5Agr")
#Extract samples from the P6For and P6Agr sites of Polygon 6 to perform differentiation tests
P6<-filter(Sg.env,Polygon == "P6")
#Extract samples from the P5For and P5Agr sites of Polygon 6 to perform differentiation tests
P5<-filter(Sg.env,Polygon == "P5")
#Plot with St between sites within polygons
(Sg.St.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=St))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Soil temperature (Â°C)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.St.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#Shapiro test used to n<50
#shapiro.test(Sg.env$St)
#Lillie test used to n>=50
lillie.test(Sg.env$St)
#St for all data, non-normal
shapiro.test(P6For$St) #(n<50)
#lillie.test(P6For$St) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$St) #(n<50)
#lillie.test(P6Agr$St) #(n>=50)
#St for P6Agr, non-normal
shapiro.test(P5For$St) #(n<50)
#lillie.test(P5For$St) #(n>=50)
#St for P5For, non-normal
#P5Agr
shapiro.test(P5Agr$St) #(n<50)
#lillie.test(P5Agr$St) #(n>=50)
#St for P5Agr, non-normal
wilcox.test(data=Sg.env,St~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,St~Site,exact=F)
#No significant differences
wilcox.test(data=P5,St~Site,exact=F)
#No significant differences
#Plot with St between sites within polygons
(Sg.At.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=At))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Air temperature (Â°C)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.At.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#The activated test is the one used depending on the number of n of the sample
#Lillie test used to n>=50
lillie.test(Sg.env$At)
#At for all data, non-normal
shapiro.test(P6For$At) #(n<50)
#lillie.test(P6For$At) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$At) #(n<50)
#lillie.test(P6Agr$At) #(n>=50)
#At for P6Agr, normal
shapiro.test(P5For$At) #(n<50)
#lillie.test(P5For$At) #(n>=50)
#St for P5For, normal
#P5Agr
shapiro.test(P5Agr$At) #(n<50)
#lillie.test(P5Agr$At) #(n>=50)
#St for P5Agr, normal
#Search for significant differences between sites within polygon 6
wilcox.test(data=Sg.env,At~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,At~Site,exact=F)
#No significant differences
t.test(data=P6,At~Site,alternative="two.sided")
#No significant differences
t.test(data=P5,At~Site,alternative="two.sided")
#No significant differences
#Plot with St between sites within polygons
(Sg.RH.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=RH))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Relative Humidity (%)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.RH.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#The activated test is the one used depending on the number of n of the sample
#Shapiro test used to n<50
#shapiro.test(Sg.env$RH)
#Lillie test used to n>=50
lillie.test(Sg.env$RH)
#At for all data, non-normal
shapiro.test(P6For$RH) #(n<50)
#lillie.test(P6For$RH) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$RH) #(n<50)
#lillie.test(P6Agr$RH) #(n>=50)
#At for P6Agr, non-normal
shapiro.test(P5For$RH) #(n<50)
#lillie.test(P5For$RH) #(n>=50)
#St for P5For, non-normal
#P5Agr
shapiro.test(P5Agr$RH) #(n<50)
#lillie.test(P5Agr$RH) #(n>=50)
#St for P5Agr, non-normal
#Search for significant differences between sites within polygon 6
wilcox.test(data=Sg.env,RH~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,RH~Site,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P5,RH~Site,exact=F)
#If there are significant differences between polygons
#Plot with St between sites within polygons
(Sg.Slope.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=Slope))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Slope (<)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.Slope.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#The activated test is the one used depending on the number of n of the sample
#Shapiro test used to n<50
#shapiro.test(Sg.env$Slope)
#Lillie test used to n>=50
lillie.test(Sg.env$Slope)
#At for all data, non-normal
shapiro.test(P6For$Slope) #(n<50)
#lillie.test(P6For$Slope) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$Slope) #(n<50)
#lillie.test(P6Agr$Slope) #(n>=50)
#At for P6Agr, non-normal
shapiro.test(P5For$Slope) #(n<50)
#lillie.test(P5For$Slope) #(n>=50)
#St for P5For, non-normal
#P5Agr
shapiro.test(P5Agr$Slope) #(n<50)
#lillie.test(P5Agr$Slope) #(n>=50)
#St for P5Agr, non-normal
#Search for significant differences between sites within polygon 6
wilcox.test(data=Sg.env,Slope~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,Slope~Site,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P5,Slope~Site,exact=F)
#If there are significant differences between polygons
#Plot with St between sites within polygons
(Sg.DEM.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=DEM))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Height (m)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.DEM.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#The activated test is the one used depending on the number of n of the sample
#Shapiro test used to n<50
#shapiro.test(Sg.env$DEM)
#Lillie test used to n>=50
lillie.test(Sg.env$DEM)
#At for all data, non-normal
shapiro.test(P6For$DEM) #(n<50)
#lillie.test(P6For$DEM) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$DEM) #(n<50)
#lillie.test(P6Agr$DEM) #(n>=50)
#At for P6Agr, non-normal
shapiro.test(P5For$DEM) #(n<50)
#lillie.test(P5For$DEM) #(n>=50)
#St for P5For, non-normal
#P5Agr
shapiro.test(P5Agr$DEM) #(n<50)
#lillie.test(P5Agr$DEM) #(n>=50)
#St for P5Agr, non-normal
#Search for significant differences between sites within polygon 6
wilcox.test(data=Sg.env,DEM~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,DEM~Site,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P5,DEM~Site,exact=F)
#If there are significant differences between polygons
#Plot with St between sites within polygons
(Sg.MSI.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=MSI))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Moisture Stress Index (m)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
#The activated test is the one used depending on the number of n of the sample
#Shapiro test used to n<50
#shapiro.test(Sg.env$DEM)
#Lillie test used to n>=50
lillie.test(Sg.env$MSI)
#At for all data, non-normal
shapiro.test(P6For$MSI) #(n<50)
#lillie.test(P6For$MSI) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$MSI) #(n<50)
#lillie.test(P6Agr$MSI) #(n>=50)
#At for P6Agr, non-normal
shapiro.test(P5For$MSI) #(n<50)
#lillie.test(P5For$MSI) #(n>=50)
#St for P5For, non-normal
#P5Agr
shapiro.test(P5Agr$MSI) #(n<50)
#lillie.test(P5Agr$MSI) #(n>=50)
#St for P5Agr, non-normal
#Search for significant differences between sites within polygon 6
wilcox.test(data=Sg.env,MSI~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,MSI~Site,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P5,MSI~Site,exact=F)
#If there are significant differences between polygons
#Plot with St between sites within polygons
(Sg.Bt.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=Bt))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Body temperature (Â°C)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.Bt.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
#The activated test is the one used depending on the number of n of the sample
#Shapiro test used to n<50
#shapiro.test(Sg.env$Bt)
#Lillie test used to n>=50
lillie.test(Sg.env$Bt)
#At for all data, non-normal
shapiro.test(P6For$Bt) #(n<50)
#lillie.test(P6For$Bt) #(n>=50)
#St for P6For, non-normal
shapiro.test(P6Agr$Bt) #(n<50)
#lillie.test(P6Agr$Bt) #(n>=50)
#At for P6Agr, normal
shapiro.test(P5For$Bt) #(n<50)
#lillie.test(P5For$Bt) #(n>=50)
#St for P5For, non-normal
#P5Agr
shapiro.test(P5Agr$Bt) #(n<50)
#lillie.test(P5Agr$Bt) #(n>=50)
#St for P5Agr, non-normal
wilcox.test(data=Sg.env,Bt~Polygon,exact=F)
#If there are significant differences between polygons
wilcox.test(data=P6,Bt~Site,exact=F)
#No significant differences
t.test(data=P6,Bt~Site,alternative="two.sided")
#No significant differences
wilcox.test(data=P5,Bt~Site,exact=F)
#No significant differences
#Plot with St between sites within polygons
(Sg.MSI.plot<-ggplot(data=Sg.env, #Database
aes(x=Site_ID,y=MSI))+ #Axis definition
geom_boxplot(aes(fill=Site))+ #Geometry definition
geom_jitter(aes(fill=Site),width=0.3)+ #Geometry definition
facet_wrap(~Polygon,scale="free_x")+ #Split plots
ylab("Moisture Stress Index (m)")+ #y-axis legend
scale_fill_brewer(palette="Dark2")+ #Colors definition
scale_x_discrete(labels=c("Agr","For"))+ #Rename groups of x-axis
theme_bw()+ #Canvas definition
theme(legend.position="none",axis.title.x=element_blank(), #Remove title of x-axis
strip.text.x=element_text(size=10,color="black"), #Size and color of strip.text.x
axis.text.x=element_text(size=10,color="black"), #Size and color of axis.text.x
axis.text.y=element_text(size=9,color="black"))) #Size and color of axis.text.y
ggsave("Analysis/Env_Vars/Figures/Sg.MSI.plot.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
library(ape)
library(ggcorrplot)
library(ggplot2)
source("Analysis/BayPass/Program/baypass_utils.R")
omega<-as.matrix(read.table("Analysis/BayPass/Results/BP_All/covis_mat_omega.out"))
pop.names<-c("P5For","P5Agr","P6For","P6Agr")
dimnames(omega)<-list(pop.names,pop.names)
#Compute and visualize the correlation matrix
cor.mat=cov2cor(omega)
#Loci info
Sg.loci<-read.table("Data/Loci_Info/Loci_info.txt",sep="\t",header=T)
(Sg.BS.corr.all<-ggcorrplot(cor.mat ,#Matrix
hc.order=TRUE, #Correlation matrix
type="lower", #Data Representation
outline.col="black", #Line color
lab=T, #Show values of FST
show.legend=TRUE, #Show legend
title="Correlation map based on~hat(Omega)", #Title
tl.cex=10, #Axis text size
tl.srt=45, #Axis text angle
ggtheme = ggplot2::theme_bw)+ #Canvas definition
scale_fill_gradient2(low="red",high="blue",  #Choose the color from the color legend values
breaks=c(-1,-0.50,0,0.50,1), #Define legend values
limit=c(-1, 1))+ #Define the limits of the legend values
labs(fill="Correlation"))
ggsave("Analysis/BayPass/Figures/Sg.BS.corr.all.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
aux.snp.xtx=read.table("Analysis/BayPass/Results/BP_All/SN_covaux_summary_pi_xtx.out",h=T)$M_XtX
plot(aux.snp.xtx,xlab="SNP",ylab="XtX corrected for SMS")
pi.beta.coef<-read.table("Analysis/BayPass/Results/BP_All/SN_covaux_summary_beta_params.out",h=T)$Mean
SN.data<-geno2YN("Data/BayPass/Input_Loci/SN_baypass_all.input")
simu.bta<-simulate.baypass(omega.mat=omega,nsnp=7599,sample.size=SN.data$NN,
beta.pi=pi.beta.coef,pi.maf=0.05,remove.fixed.loci=TRUE,suffix="btapods")
#Cargamos los simulados
pod.xtx<-read.table("Analysis/BayPass/Results/BP_All/anapod_summary_pi_xtx.out",h=T)$M_XtX
#Usamos el 0.05
pod.thresh=quantile(pod.xtx,probs=0.85)
#add the thresh to the actual XtX plot
plot(aux.snp.xtx,xlab="SNP",ylab="XtX corrected for SMS",cex=1)
abline(h=pod.thresh,lty=2,lwd=1.2,col="red")
Snps_XtX.all<-data.frame(XtX=aux.snp.xtx,pos=seq(1:length(aux.snp.xtx)),CHROM=Sg.loci$CHROM,ID=Sg.loci$ID)
outliers.baypass <-as.data.frame(Snps_XtX.all[Snps_XtX.all$XtX>=pod.thresh,])
write.table(outliers.baypass,file="Analysis/BayPass/Results/BP_All/outliers.baypass",row.names=F,col.names=T,quote=F)
(Bs_plot_all<-ggplot(Snps_XtX.all,aes(x=pos,y=XtX))+
geom_point(size=0.75,colour="gray35")+
geom_point(data=outliers.baypass,aes(x=pos,y=XtX,col="Outlier"))+
xlab("Position")+theme_bw()+
theme(legend.title=element_blank()))#+
#annotate("text",x=2250,y=5.4,label="L2651",size=3)+
#annotate("text",x=5450,y=5.48,label="L5747",size=3)+
#annotate("text",x=7250,y=5.4,label="L7511",size=3))
ggsave("Analysis/BayPass/Figures/Bs_plot_all.pdf",dpi=300,limitsize=TRUE,
width=10,height=7)
